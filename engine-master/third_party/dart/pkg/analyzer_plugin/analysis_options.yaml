analyzer:
  strong-mode:
    implicit-casts: false
linter:
  rules:
    - empty_statements
    - unnecessary_brace_in_string_interps
    #
    # From pedantic 1.9.0:
    #
    #- always_declare_return_types # 951
    - always_require_non_null_named_parameters
    - annotate_overrides
    - avoid_empty_else
    #- avoid_init_to_null # 19
    - avoid_null_checks_in_equality_operators
    - avoid_relative_lib_imports
    - avoid_return_types_on_setters
    - avoid_shadowing_type_parameters
    - avoid_types_as_parameter_names
    - camel_case_extensions
    - curly_braces_in_flow_control_structures
    - empty_catches
    - empty_constructor_bodies
    - library_names
    - library_prefixes
    - no_duplicate_case_values
    - null_closures
    #- omit_local_variable_types # 1759
    - prefer_adjacent_string_concatenation
    #- prefer_collection_literals # 9
    #- prefer_conditional_assignment # 72
    - prefer_contains
    #- prefer_equal_for_default_values # 177
    #- prefer_final_fields # 5
    - prefer_for_elements_to_map_fromIterable
    - prefer_generic_function_type_aliases
    #- prefer_if_null_operators # 12
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    #- prefer_single_quotes # 2076
    - prefer_spread_collections
    - recursive_getters
    #- slash_for_doc_comments # 1681
    - type_init_formals
    - unawaited_futures
    - unnecessary_const
    - unnecessary_new
    - unnecessary_null_in_if_null_operators
    - unnecessary_this
    #- unrelated_type_equality_checks # 1
    #- use_function_type_syntax_for_parameters # 86
    - use_rethrow_when_possible
    - valid_regexps
